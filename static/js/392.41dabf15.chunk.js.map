{"version":3,"file":"static/js/392.41dabf15.chunk.js","mappings":"2QAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,QAAS,CACPC,cACE,gOAIOC,EAAc,WACzB,OAAOL,EAASM,IAAI,oBACtB,EAEaC,EAAc,SAAAC,GACzB,OAAOR,EAASM,IAAI,UAADG,OAAWD,GAChC,EAEaE,EAAc,SAAAF,GACzB,OAAOR,EAASM,IAAI,UAADG,OAAWD,EAAE,YAClC,EAEaG,EAAiB,SAAAH,GAC5B,OAAOR,EAASM,IAAI,UAADG,OAAWD,EAAE,YAClC,EAEaI,EAAmB,SAAAC,GAC9B,OAAOb,EAASM,IAAI,gBAAiB,CACnCQ,OAAQ,CACND,MAAAA,IAGN,C,2GC/BA,GAAiB,E,oCCkDjB,EA5Ca,WACX,IAAAE,GAAyBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9BI,EAAKF,EAAA,GAAEG,EAAOH,EAAA,GACrBI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEdlB,GAAOqB,EAAAA,EAAAA,MAAPrB,IAERsB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEG,OAFHF,EAAAC,KAAA,EAEdf,GAAW,GAAMc,EAAAE,KAAA,GACM9B,EAAAA,EAAAA,IAAYF,GAAI,KAAD,EAAA4B,EAAAE,EAAAG,KAA9BJ,EAAID,EAAJC,KACRjB,EAAY,OAAJiB,QAAI,IAAJA,GAAAA,EAAMK,KAAKC,OAASN,EAAKK,KAAO,IAAIJ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE5CV,EAASU,EAAAM,GAAMC,SAAS,QAEN,OAFMP,EAAAC,KAAA,GAExBf,GAAW,GAAOc,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,wBAErB,kBAVc,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAYflB,GACF,GAAG,CAACvB,IAEJ,IAAM0C,EAAW/B,EAAMgC,KAAI,SAAAC,GAAA,IAAG5C,EAAE4C,EAAF5C,GAAI6C,EAAID,EAAJC,KAAMC,EAASF,EAATE,UAAWC,EAAYH,EAAZG,aAAY,OAC7DC,EAAAA,EAAAA,MAAA,MAAaC,UAAWC,EAAAA,KAAYC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,KAAAD,SAAIN,KACJO,EAAAA,EAAAA,KAAA,KAAAD,SAAIL,KACJM,EAAAA,EAAAA,KAAA,OACEC,IAAG,kCAAApD,OAAoC8C,GACvCO,IAAI,QACJC,MAAM,UANDvD,EAQJ,IAGP,OACEgD,EAAAA,EAAAA,MAAAQ,EAAAA,SAAA,CAAAL,SAAA,CACGhC,IAASiC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,MAAaC,SAAEhC,IACtCJ,IAAWqC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACdM,QAAQf,EAASP,UAAWiB,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,KAAYC,SAAET,MAGhE,C","sources":["api/posts.js","components/Cast/cast.module.css","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMThiYTIxZDE1MzI0YzAxNjgwMmVjNTI4NGJkOGEzYiIsInN1YiI6IjY1YmFhNGVjMzNhMzc2MDBlNjg1ZmJmMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fLVvcAoMtoguxzCXZiqFiKcftDcbrmaR_5k4XEIUtk8',\n  },\n});\n\nexport const getAllPosts = () => {\n  return instance.get('/trending/all/day');\n};\n\nexport const getPostById = id => {\n  return instance.get(`/movie/${id}`);\n};\n\nexport const getCastById = id => {\n  return instance.get(`/movie/${id}/credits`);\n};\n\nexport const getReviewsById = id => {\n  return instance.get(`/movie/${id}/reviews`);\n};\n\nexport const fetchSearchMovie = query => {\n  return instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import styles from './cast.module.css';\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getCastById } from '../../api/posts';\n\nconst Cast = () => {\n  const [casts, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        setLoading(true);\n        const { data } = await getCastById(id);\n        setCast(data?.cast.length ? data.cast : []);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPost();\n  }, [id]);\n\n  const elements = casts.map(({ id, name, character, profile_path }) => (\n    <li key={id} className={styles.item}>\n      <p>{name}</p>\n      <p>{character}</p>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n        alt=\"actor\"\n        width=\"100\"\n      />\n    </li>\n  ));\n\n  return (\n    <>\n      {error && <p className={styles.error}>{error}</p>}\n      {loading && <p>...Loading</p>}\n      {Boolean(elements.length) && <ul className={styles.list}>{elements}</ul>}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["instance","axios","baseURL","headers","Authorization","getAllPosts","get","getPostById","id","concat","getCastById","getReviewsById","fetchSearchMovie","query","params","_useState","useState","_useState2","_slicedToArray","casts","setCast","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useParams","useEffect","fetchPost","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getCastById","data","_context","prev","next","sent","cast","length","t0","message","finish","stop","apply","arguments","elements","map","_ref2","name","character","profile_path","_jsxs","className","styles","children","_jsx","src","alt","width","_Fragment","Boolean"],"sourceRoot":""}