{"version":3,"file":"static/js/571.bb9459f9.chunk.js","mappings":"2QAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,QAAS,CACPC,cACE,gOAIOC,EAAc,WACzB,OAAOL,EAASM,IAAI,oBACtB,EAEaC,EAAc,SAAAC,GACzB,OAAOR,EAASM,IAAI,UAADG,OAAWD,GAChC,EAEaE,EAAc,SAAAF,GACzB,OAAOR,EAASM,IAAI,UAADG,OAAWD,EAAE,YAClC,EAEaG,EAAiB,SAAAH,GAC5B,OAAOR,EAASM,IAAI,UAADG,OAAWD,EAAE,YAClC,EAEaI,EAAmB,SAAAC,GAC9B,OAAOb,EAASM,IAAI,gBAAiB,CACnCQ,OAAQ,CACND,MAAAA,IAGN,C,2GC/BA,GAAiB,E,oCCiDjB,EA3CgB,WACd,IAAAE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEdlB,GAAOqB,EAAAA,EAAAA,MAAPrB,IAERsB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEG,OAFHF,EAAAC,KAAA,EAEdf,GAAW,GAAMc,EAAAE,KAAA,GACM7B,EAAAA,EAAAA,IAAeH,GAAI,KAAD,EAAA4B,EAAAE,EAAAG,KAAjCJ,EAAID,EAAJC,KACRjB,EAAe,OAAJiB,QAAI,IAAJA,GAAAA,EAAMK,QAAQC,OAASN,EAAKK,QAAU,IAAIJ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAErDV,EAASU,EAAAM,GAAMC,SAAS,QAEN,OAFMP,EAAAC,KAAA,GAExBf,GAAW,GAAOc,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,wBAErB,kBAVc,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAYflB,GACF,GAAG,CAACvB,IAEJ,IAAM0C,EAAW/B,EAAQgC,KAAI,SAAAC,EAAsBC,GAAK,IAAxBC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OAC7CC,EAAAA,EAAAA,MAAA,MAAgBC,UAAWC,EAAAA,KAAYC,SAAA,EACrCH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CAAI,WAASL,MACbM,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,MAFGF,EAGJ,IAGP,OACEG,EAAAA,EAAAA,MAAAK,EAAAA,SAAA,CAAAF,SAAA,CACGhC,IAASiC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,MAAaC,SAAEhC,IACtCJ,IAAWqC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACdG,QAAQZ,EAASP,SAChBiB,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,KAAYC,SAAET,KAE7BU,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+CAIX,C","sources":["api/posts.js","components/Reviews/reviews.module.css","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMThiYTIxZDE1MzI0YzAxNjgwMmVjNTI4NGJkOGEzYiIsInN1YiI6IjY1YmFhNGVjMzNhMzc2MDBlNjg1ZmJmMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fLVvcAoMtoguxzCXZiqFiKcftDcbrmaR_5k4XEIUtk8',\n  },\n});\n\nexport const getAllPosts = () => {\n  return instance.get('/trending/all/day');\n};\n\nexport const getPostById = id => {\n  return instance.get(`/movie/${id}`);\n};\n\nexport const getCastById = id => {\n  return instance.get(`/movie/${id}/credits`);\n};\n\nexport const getReviewsById = id => {\n  return instance.get(`/movie/${id}/reviews`);\n};\n\nexport const fetchSearchMovie = query => {\n  return instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import styles from './reviews.module.css';\n\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getReviewsById } from '../../api/posts';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        setLoading(true);\n        const { data } = await getReviewsById(id);\n        setReviews(data?.results.length ? data.results : []);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPost();\n  }, [id]);\n\n  const elements = reviews.map(({ author, content }, index) => (\n    <li key={index} className={styles.item}>\n      <h4>Author: {author}</h4>\n      <p>{content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      {error && <p className={styles.error}>{error}</p>}\n      {loading && <p>...Loading</p>}\n      {Boolean(elements.length) ? (\n        <ul className={styles.list}>{elements}</ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","headers","Authorization","getAllPosts","get","getPostById","id","concat","getCastById","getReviewsById","fetchSearchMovie","query","params","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useParams","useEffect","fetchPost","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getReviewsById","data","_context","prev","next","sent","results","length","t0","message","finish","stop","apply","arguments","elements","map","_ref2","index","author","content","_jsxs","className","styles","children","_jsx","_Fragment","Boolean"],"sourceRoot":""}