{"version":3,"file":"static/js/647.ee6b0145.chunk.js","mappings":"2QAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,QAAS,CACPC,cACE,gOAIOC,EAAc,WACzB,OAAOL,EAASM,IAAI,oBACtB,EAEaC,EAAc,SAAAC,GACzB,OAAOR,EAASM,IAAI,UAADG,OAAWD,GAChC,EAEaE,EAAc,SAAAF,GACzB,OAAOR,EAASM,IAAI,UAADG,OAAWD,EAAE,YAClC,EAEaG,EAAiB,SAAAH,GAC5B,OAAOR,EAASM,IAAI,UAADG,OAAWD,EAAE,YAClC,EAEaI,EAAmB,SAAAC,GAC9B,OAAOb,EAASM,IAAI,gBAAiB,CACnCQ,OAAQ,CACND,MAAAA,IAGN,C,mHC/BA,GAAiB,E,SCiEjB,EA5De,WAAO,IAADE,EAAAC,EACnBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAA0BV,EAAAA,EAAAA,UAAkC,QAA1BH,EAACW,EAAapB,IAAI,gBAAQ,IAAAS,EAAAA,EAAI,IAAGc,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAA5DE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBhB,EAAiC,QAA5BG,EAAGU,EAAapB,IAAI,gBAAQ,IAAAU,EAAAA,EAAI,GACrCgB,GAAWC,EAAAA,EAAAA,OAYjBC,EAAAA,EAAAA,YAAU,WACHrB,IAGLD,EAAAA,EAAAA,IAAiBC,GACdsB,MAAK,SAAAC,GACJ,IAAKA,EAAKC,KAAKC,cACb,OAAOC,MAAM,uBAAD9B,OAAwBI,IAEtCS,EAASc,EAAKC,KAAKG,QACrB,IACCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAM,GACtC,GAAG,CAAC7B,IAMJ,OACEgC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMG,UAAWC,EAAAA,KAAaC,SA9Bb,SAAAC,GAEnB,GADAA,EAAEC,iBACY,KAAVtB,EACF,OAAOS,MACL,uEAGJZ,EAAgB,CAAEd,MAAOiB,GAC3B,EAsByDiB,SAAA,EACnDM,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLN,UAAWC,EAAAA,MACXnB,MAAOA,EACPyB,SAXkB,SAAAJ,GACxBpB,EAASoB,EAAEK,OAAO1B,MACpB,KAWMuB,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQP,SAAC,eAExBM,EAAAA,EAAAA,KAAA,MAAAN,SACG1B,EAAMoC,KAAI,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAIF,EAAJE,KAAMpD,EAAEkD,EAAFlD,GAAE,OAC3B6C,EAAAA,EAAAA,KAAA,MAAAN,UACEF,EAAAA,EAAAA,MAACgB,EAAAA,GAAI,CAACC,GAAE,WAAArD,OAAaD,GAAMuD,MAAO,CAAEC,KAAMhC,GAAWe,SAAA,CAClDY,EACAC,MAHIpD,EAKJ,QAKf,ECrDA,EARmB,WACjB,OACE6C,EAAAA,EAAAA,KAAA,OAAAN,UACEM,EAAAA,EAAAA,KAACY,EAAM,KAGb,C","sources":["api/posts.js","components/Movies/movies.module.css","components/Movies/Movies.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiMThiYTIxZDE1MzI0YzAxNjgwMmVjNTI4NGJkOGEzYiIsInN1YiI6IjY1YmFhNGVjMzNhMzc2MDBlNjg1ZmJmMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fLVvcAoMtoguxzCXZiqFiKcftDcbrmaR_5k4XEIUtk8',\n  },\n});\n\nexport const getAllPosts = () => {\n  return instance.get('/trending/all/day');\n};\n\nexport const getPostById = id => {\n  return instance.get(`/movie/${id}`);\n};\n\nexport const getCastById = id => {\n  return instance.get(`/movie/${id}/credits`);\n};\n\nexport const getReviewsById = id => {\n  return instance.get(`/movie/${id}/reviews`);\n};\n\nexport const fetchSearchMovie = query => {\n  return instance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation, Link } from 'react-router-dom';\nimport { fetchSearchMovie } from 'api/posts';\n\nimport styles from './movies.module.css';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [value, setValue] = useState(searchParams.get('query') ?? '');\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    if (value === '') {\n      return alert(\n        'Sorry, but we can not find empty string, you should write something'\n      );\n    }\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchSearchMovie(query)\n      .then(info => {\n        if (!info.data.total_results) {\n          return alert(`Sorry we dont found ${query}`);\n        }\n        setFilms(info.data.results);\n      })\n      .catch(error => console.log(error));\n  }, [query]);\n\n  const handleInputChange = e => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={onFormSubmit}>\n        <input\n          type=\"text\"\n          className={styles.input}\n          value={value}\n          onChange={handleInputChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {films.map(({ title, name, id }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n              {name}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","// import styles from './movies-page.module.css';\nimport Movies from '../../components/Movies/Movies';\n\nconst MoviesPage = () => {\n  return (\n    <div>\n      <Movies />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","headers","Authorization","getAllPosts","get","getPostById","id","concat","getCastById","getReviewsById","fetchSearchMovie","query","params","_searchParams$get","_searchParams$get2","_useState","useState","_useState2","_slicedToArray","films","setFilms","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState3","_useState4","value","setValue","location","useLocation","useEffect","then","info","data","total_results","alert","results","catch","error","console","log","_jsxs","_Fragment","children","className","styles","onSubmit","e","preventDefault","_jsx","type","onChange","target","map","_ref","title","name","Link","to","state","from","Movies"],"sourceRoot":""}